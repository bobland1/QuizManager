@using QuizManager.Models.ViewModels

@model EditViewModel
@{

    ViewData["Title"] = "Edit Page";
}

<div class="text-center">
    @using (Html.BeginForm())
    {
        <h1>Edit Quiz</h1>
        <div class="row">
            <a href="@Url.Action("Delete", "Home", new { quizId = Model.QuizId })" onclick="return confirm('Are you sure?')">
                <div class="card editBtn p-3">
                    <img src="/img/delete.png" height="50" width="50" />
                </div>
            </a>
        </div>
        <br />
        @Html.HiddenFor(model => model.QuizId)

        <div class="form-group">
            <h4>Quiz Name</h4>
            <br />
            <div class="col-md-7 mx-auto">
                @Html.EditorFor(model => model.QuizName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuizName, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <h4>Questions</h4>
        <br />
        <div class="questionsRows">
            @foreach (var question in Model.Questions)
            {
                @await Html.PartialAsync("EditQuestionsRow", question)
            }
        </div>

        <div class="form-group">
            <div class="mx-auto col-md-7 mt-3">
                @Html.ActionLink("Add Question", "BlankQuestionRow", null, htmlAttributes: new { @class = "btn btn-outline-secondary addQuestion" })
                <button class="btn btn-default btn-success">Save</button>
            </div>
        </div>
    }
</div>
